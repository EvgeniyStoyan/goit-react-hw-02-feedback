{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","s","container_reviews","title_reviews","FeedbackOptions","onClickGood","onClickNeutral","onClickBad","container_buttons","type","onClick","Notification","message","notification","Statistics","good","neutral","bad","total","positivePercentage","statistics_title","statistics_text","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.686e4e48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics_title\":\"Statistics_statistics_title__73XYH\",\"statistics_text\":\"Statistics_statistics_text__3Mtof\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_reviews\":\"Section_container_reviews__2cA_l\",\"title_reviews\":\"Section_title_reviews__3Jiw5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1akYK\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div className={s.container_reviews}>\r\n      <h2 className={s.title_reviews}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ onClickGood, onClickNeutral, onClickBad }) => (\r\n  <div className={s.container_buttons}>\r\n    <button type=\"button\" onClick={onClickGood}>\r\n      GOOD\r\n    </button>\r\n    <button type=\"button\" onClick={onClickNeutral}>\r\n      NEUTRAL\r\n    </button>\r\n    <button type=\"button\" onClick={onClickBad}>\r\n      BAD\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={s.notification}>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    <h2 className={s.statistics_title}>Statistics</h2>\r\n    {total === 0 ? (\r\n      <Notification message=\"No feedback given\" />\r\n    ) : (\r\n      <div>\r\n        <p className={s.statistics_text}>Good: {good}</p>\r\n        <p className={s.statistics_text}>Neutral: {neutral}</p>\r\n        <p className={s.statistics_text}>Bad: {bad}</p>\r\n        <p className={s.statistics_text}>Total: {total}</p>\r\n        <p className={s.statistics_text}>\r\n          Positive feedback:{positivePercentage}%\r\n        </p>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\n// import \"./App.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onClickGood = () => {\n    this.setState((prevState) => ({\n      good: prevState.good + 1,\n    }));\n  };\n\n  onClickNeutral = () => {\n    this.setState((prevState) => ({\n      neutral: prevState.neutral + 1,\n    }));\n  };\n\n  onClickBad = () => {\n    this.setState((prevState) => ({\n      bad: prevState.bad + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    return Math.round((this.state.good * 100) / total);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const { onClickGood, onClickNeutral, onClickBad } = this;\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            onClickGood={onClickGood}\n            onClickNeutral={onClickNeutral}\n            onClickBad={onClickBad}\n          ></FeedbackOptions>\n\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          ></Statistics>\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}